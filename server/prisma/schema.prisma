// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum untuk Peran Admin
enum Role {
  ADMINISTRATOR // Dapat mengakses dan mengelola semua fitur
  ADMIN         // Dapat mengakses dan mengelola pelatihan, peserta dan sertifikat
  FINANCE       // Dapat mengakses dan mengelola pembayaran, invoice dan kuitansi
  SALES         // Dapat mengakses dan mengelola data peserta, pelatihan, kuota pelatihan, pendapatan bulanan
}

// Model untuk Admin/User
model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(ADMIN) // Tambahkan field role, default ke ADMIN
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Model untuk Pelatihan
model Training {
  id           Int            @id @default(autoincrement())
  name         String         @map("nama_pelatihan")
  category     String         @map("kategori")
  startDate    DateTime       @map("periode_mulai")
  endDate      DateTime       @map("periode_selesai")
  batch        Int
  status       TrainingStatus @default(PLANNED)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  participants Participant[]
}

// Model untuk Peserta
model Participant {
  id             Int            @id @default(autoincrement())
  registrationId String?        @unique @map("nomor_registrasi")
  name           String         @map("nama_peserta")
  notes          String?
  paymentStatus  PaymentStatus  @map("status_pembayaran")
  documentStatus DocumentStatus @map("status_dokumen")
  sales          String?
  trainingId     Int            @map("pelatihan_id")
  training       Training       @relation(fields: [trainingId], references: [id], onDelete: Cascade)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

// Enum untuk Status Pelatihan
enum TrainingStatus {
  PLANNED
  RUNNING
  CHECKING
  RESCHEDULE
  COMPLETED
  CANCELED
}

// Enum untuk Status Pembayaran Peserta
enum PaymentStatus {
  PENDING
  DP
  WARM
  LUNAS
}

// Enum untuk Status Dokumen Peserta
enum DocumentStatus {
  PENDING
  INPUT
  CLAIM
  VERIFIED
  REJECTED
  BELUM
}